evaluate this prompt. don't take any action. "Here’s your updated full prompt with clarifications added for file storage, DICOM support, and thumbnail generation.

⸻

REPLIT AGENT PROMPT – FINAL (MAJESTIC: PHASE 1 UNIFIED INGESTION PIPELINE WITH SYSTEM INTEGRATION)

⸻

Objective

Build Phase 1 of the unified ingestion pipeline for Majestic.
This version includes:
	•	Visual studies linked to body systems
	•	New backend APIs
	•	Automatic classification, extraction, and comparison

⸻

Pipeline Overview

The pipeline will:
	1.	Accept files from direct upload.
	2.	Classify the file as:
	•	lab
	•	visual
	•	mixed
	3.	For visual or mixed files:
	•	Securely store the file
	•	Extract metrics, findings, and test date using GPT‑4o (multi-image / multi-page)
	•	Compare the study with prior studies of the same type (trend detection)
	•	Associate the study with the correct body system (linkedSystemId)
	4.	Update the imaging_studies table and make results accessible via APIs and in the System drill‑down UI.

⸻

Key Requirements
	•	CamelCase in code, snake_case in DB.
	•	Statuses: pendingProcessing, processed, failedExtraction
	•	Fields: studyType, linkedSystemId, metricsJson, metricChangesJson, comparisonSummary, aiSummary, testDate

⸻

Pipeline Steps

⸻

Step 1 – Ingestion

Endpoint:
POST /ingestFile

Input:
	•	userId
	•	file (PDF, image; DICOM stored but not processed in Phase 1)
	•	testDate (optional; fallback = current date)

⸻

Step 2 – Classification

Use GPT‑4o to classify:

{
  "dataType": "lab" | "visual" | "mixed",
  "studyType": "eye_topography" | "oct" | "fundus" | "mri" | "ct" | "xray" | "dexa" | "ecg" | "eeg" | "unknown",
  "linkedSystemId": "<determine from study type>"
}

Routing:
	•	lab: Forward to existing numeric lab ingestion.
	•	visual: Forward to visual pipeline.
	•	mixed:
	•	Extract labs → lab_results
	•	Extract visuals → imaging_studies (parallel)

⸻

Step 3 – Visual Diagnostics Pipeline
	1.	Storage
	•	Store files locally (same as /uploads)
	•	Future phases may switch to S3/Supabase
	2.	Thumbnail Generation
	•	PDF: use first page
	•	Image: original image
	•	DICOM: store only (no processing; mark failedExtraction)
	3.	Preprocessing
	•	Extract text/images from PDF
	•	Multi-page and multi-image support
	4.	GPT‑4o Extraction

Prompt output example:

{
  "studyType": "eye_topography",
  "measurements": [
    {"name": "Kmax", "value": 51.3, "units": "D"},
    {"name": "cornealThickness", "value": 465, "units": "µm"}
  ],
  "keyFindings": [
    "Inferior steepening of cornea",
    "Stable pattern since 2021"
  ],
  "dateFoundInImage": "2023-08-12",
  "summary": "Stable keratoconus with Kmax 51.3 D and corneal thickness 465 µm."
}

Save into imaging_studies:
	•	fileUrl
	•	studyType
	•	linkedSystemId
	•	metricsJson
	•	aiSummary
	•	testDate = dateFoundInImage if present
	•	status = processed

If extraction fails: status = failedExtraction.

⸻

Step 4 – Auto-comparison & Trends

Compare with previous studies for the same user/studyType:

{
  "trendSummary": "Overall stable corneal shape since 2021",
  "metricChanges": [
    {
      "metric": "Kmax",
      "previous": {"value": 51.5, "units": "D", "date": "2021-07-12"},
      "current": {"value": 51.3, "units": "D", "date": "2023-08-10"},
      "trend": "slightly improved"
    }
  ]
}

Save:
	•	comparisonSummary
	•	metricChangesJson

⸻

Database Schema

Create imaging_studies

CREATE TABLE imaging_studies (
  id SERIAL PRIMARY KEY,
  user_id INTEGER REFERENCES users(id) ON DELETE CASCADE,
  linked_system_id INTEGER REFERENCES health_systems(id),
  study_type VARCHAR(100),
  file_url TEXT,
  thumbnail_url TEXT,
  test_date DATE,
  ai_summary TEXT,
  metrics_json JSONB,
  comparison_summary TEXT,
  metric_changes_json JSONB,
  status VARCHAR(50) DEFAULT 'pendingProcessing',
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);


⸻

API Endpoints

POST /ingestFile

Output:

{
  "status": "processed",
  "studyType": "...",
  "aiSummary": "...",
  "metricsJson": [...]
}

GET /imaging_studies?userId=…

Returns list of imaging studies with summaries, metrics, and comparisons.

GET /systems/:systemId/studies

Returns imaging_studies filtered by system.

⸻

UI Integration

System Drill-Down Pages

Sections:
	1.	Key Metrics table (labs)
	2.	Additional Metrics table (labs)
	3.	AI Analysis (from labs)
	4.	NEW: Studies & Imaging Section
	•	Thumbnail
	•	Study type
	•	Date
	•	Key metrics (metricsJson)
	•	Trend summary
	•	Clicking → Study detail: AI summary, metrics, comparisons

Visual studies also appear in the global timeline.

⸻

Success Criteria

For uploaded files:
	•	Auto-classified
	•	Visual studies stored, extracted, compared
	•	Linked to correct system
	•	Visible in timeline and relevant system drill-down page

⸻

Out of Scope for Phase 1
	•	Email ingestion automation
	•	DICOM extraction/analysis (only store)
	•	Advanced graphing
	•	Fine-tuned models

⸻

Important Notes
	•	AI determines studyType and linkedSystemId
	•	Multi-page/multi-image supported
	•	Comparison uses numeric metrics and image-based trends
	•	Local storage for files in Phase 1
	•	No manual tagging
	•	Use camelCase in code

⸻

This updated prompt now includes:
	1.	Explicit creation of imaging_studies table.
	2.	Clarified file storage (local).
	3.	DICOM files stored only (no analysis).
	4.	Thumbnail generation logic.

"