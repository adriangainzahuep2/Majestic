version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: majestic-app
    restart: unless-stopped
    ports:
      - "80:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - DATABASE_URL=${DATABASE_URL}
      - JWT_SECRET=${JWT_SECRET}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - DIAG_TOKEN=${DIAG_TOKEN}
      - ADMIN_EMAILS=${ADMIN_EMAILS}
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - majestic_network
    restart: unless-stopped  
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  postgres:
    image: postgres:17-alpine
    container_name: majestic_postgres
    environment:
      - POSTGRES_DB=health_app
      - POSTGRES_USER=${DB_USERNAME:-majestic}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=en_US.utf8 --lc-ctype=en_US.utf8
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init_db.sh:/docker-entrypoint-initdb.d/init_db.sh:ro
    networks:
      - majestic_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U majestic -d health_app"]
      interval: 10s
      timeout: 5s
      retries: 5
      
volumes:
  postgres_data:
    driver: local

networks:
  majestic_network:
    driver: bridge